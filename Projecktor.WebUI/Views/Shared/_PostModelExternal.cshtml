@model PostViewModel

<div class="external-posts" id="posts_@Model.PostId">

    @if (Model.ReblogedFrom != null)
    {
        for (int i = 0; i < Model.Images.Count; i++)
        {

            if (Model.Images.Count > 1)
            {
                string[] image = Model.Images[i].Remove(0, 1).Split('.');

                if (IsCDNAvailable == true)
                {
                    <a onclick="GalleryMany('@Model.PostId-@i', '@String.Format("{0}{1}", ProjecktorCDN, "/Images/full_page_vignette.png")')">
                        <img src="@String.Format("{0}{1}{2}", ProjecktorCDN, image[0] + "_720.", image[1])" , class="image720" width="702" id="@i" />
                    </a>
                }
                else
                {
                    <a onclick="GalleryMany('@Model.PostId-@i', '@Url.Action("image", "home", new { path = "~/Images/full_page_vignette.png" } )')">
                        <img src="@Url.Action("image", "home", new { path = image[0] + "_720." + image[1] } )" , class="image720" width="702" id="@i" />
                    </a>
                }
            }
            else
            {
                string[] image = Model.Images[i].Remove(0, 1).Split('.');

                if (IsCDNAvailable == true)
                {
                    <a onclick="GalleryOne('@String.Format("{0}{1}{2}", ProjecktorCDN, image[0] + "_720.", image[1])', '@String.Format("{0}{1}", ProjecktorCDN, "/Images/full_page_vignette.png")')">
                        <img src="@String.Format("{0}{1}{2}", ProjecktorCDN, image[0] + "_720.", image[1])" , class="image720" width="702" id="@i" />
                    </a>
                }
                else
                {
                    <a onclick="GalleryOne('@Url.Action("image", "home", new { path = image[0] + "_720." + image[1] } )', '@Url.Action("image", "home", new { path = "~/Images/full_page_vignette.png" } )')">
                        <img src="@Url.Action("image", "home", new { path = image[0] + "_720." + image[1] } )" , class="image720" width="702" id="@i" />
                    </a>
                }

            }
        }

        <div class="post-body">
            <p class="post-body-text">@Model.Text</p>
        </div>

        <div class="post-external-info">
            <a class="poster-source-external" href="@String.Format("{0}{1}{2}","http://",  Model.ReblogedFrom.Username,".projecktor.com")">@Model.ReblogedFrom.Username</a>
            <a class="source-link-external " href="@String.Format("{0}{1}{2}{3}","http://",  Model.Source.Author.Username, ".projecktor.com/post/", Model.Source.Id)">Source: @Model.Source.Author.Username</a>
        </div>
    }
    else
    {
        for (int i = 0; i < Model.Images.Count; i++)
        {
            if (Model.Images.Count == 1)
            {
                string[] image = Model.Images[i].Remove(0, 1).Split('.');

                if (IsCDNAvailable == true)
                {
                    <a onclick="GalleryOne('@String.Format("{0}{1}{2}", ProjecktorCDN, image[0] + "_720.", image[1])', '@String.Format("{0}{1}", ProjecktorCDN, "/Images/full_page_vignette.png")')">
                        <img src="@String.Format("{0}{1}{2}", ProjecktorCDN, image[0] + "_720.", image[1])" , class="image720" width="702" id="@i" />
                    </a>
                }
                else
                {
                    <a onclick="GalleryOne('@Url.Action("image", "home", new { path = image[0] + "_720." + image[1] } )', '@Url.Action("image", "home", new { path = "~/Images/full_page_vignette.png" } )')">
                        <img src="@Url.Action("image", "home", new { path = image[0] + "_720." + image[1] } )" , class="image720" width="702" id="@i" />
                    </a>
                }
            }
            else
            {
                string[] image = Model.Images[i].Remove(0, 1).Split('.');

                if (IsCDNAvailable == true)
                {
                    <a onclick="GalleryMany('@Model.PostId-@i', '@String.Format("{0}{1}", ProjecktorCDN, "/Images/full_page_vignette.png")')">
                        <img src="@String.Format("{0}{1}{2}", ProjecktorCDN, image[0] + "_720.", image[1])" , class="image720" width="702" id="@i" />
                    </a>
                }
                else
                {
                    <a onclick="GalleryMany('@Model.PostId-@i', '@Url.Action("image", "home", new { path = "~/Images/full_page_vignette.png" } )')">
                        <img src="@Url.Action("image", "home", new { path = image[0] + "_720." + image[1] } )" , class="image720" width="702" id="@i" />
                    </a>
                }
            }
        }
        <div class="post-body">
            <p>@Model.Text</p>
        </div>
    }

    @if (Model.Hashtags != null)
    {
        <div class="post-tags">
            @foreach (Hashtag tag in Model.Hashtags)
            {
                <label>@Html.RouteLink("#" + tag.Tag, new { controller = "home", id = tag.Tag, action = "tagged" }, new { @class = "post-tag-link" })</label>
            }
        </div>
    }

    <div class="footer">
        <div class="footer-buttons">
            @if (Security.IsAuthenticated == true)
            {
                if (Model.ReblogedFrom == null)
                {
                    string reblogVar = "reblog_" + Model.PostId;
                    <input type="button" class="reblogButton" id="@reblogVar" onclick="Reblog(@Model.TextId, @Model.Author.Id, @Model.PostId)" title="Reblog" />
                }
                else
                {
                    string reblogVar = "reblog_" + Model.Source.Id;
                    <input type="button" class="reblogButton" id="@reblogVar" onclick="Reblog(@Model.TextId, @Model.Author.Id, @Model.Source.Id)" title="Reblog" />
                }

                if (Model.Author.Id != Security.UserId)
                {
                    bool Liked = CurrentUser.Likes.Any(l => l.PostId == Model.PostId);
                    string likeVar = "like_" + Model.PostId;
                    string className = Liked ? "unLikeButton" : "likeButton";

                    if (Model.Source != null)
                    {
                        <input type="button" class="@className" id="@likeVar" onclick="LikePost(@Model.PostId, @Model.Source.Id)" title="Like" />
                    }
                    else
                    {
                        <input type="button" class="@className" id="@likeVar" onclick="LikePost(@Model.PostId, @Model.Author.Id)" title="Like" />
                    }

                }

                if (Model.ReblogedFrom != null && Model.Author.Id == Security.UserId)
                {
                    <input type="button" class="deleteButton" title="Delete" onclick="DeleteReblog(@Model.PostId)" />
                }
                else if (Model.Author.Id == Security.UserId && Model.ReblogedFrom == null)
                {
                    <input type="button" class="deleteButton" title="Delete" onclick="DeletePost(@Model.PostId)" />
                }
            }
        </div>

        <div class="post-notes">

            @if (Model.PostCount == 0)
            {
                <label></label>
            }
            else if (Model.PostCount == 1)
            {
                if (Model.ReblogedFrom == null)
                {
                    <label>@Html.RouteLink(Model.PostCount.ToString() + " note", new { controller = "home", id = Model.Author.Id, action = "notes" }, new { @class = "post-notes-link" })</label>
                }
                else
                {
                    <label>@Html.RouteLink(Model.PostCount.ToString() + " note", new { controller = "home", id = Model.Source.Id, action = "notes" }, new { @class = "post-notes-link" })</label>
                }

            }
            else
            {
                if (Model.ReblogedFrom == null)
                {
                    <label>@Html.RouteLink(Model.PostCount.ToString() + " notes", new { controller = "home", id = Model.Author.Id, action = "notes" }, new { @class = "post-notes-link" })</label>
                }
                else
                {
                    <label>@Html.RouteLink(Model.PostCount.ToString() + " notes", new { controller = "home", id = Model.Source.Id, action = "notes" }, new { @class = "post-notes-link" })</label>
                }
            }
        </div>
    </div>
</div>
