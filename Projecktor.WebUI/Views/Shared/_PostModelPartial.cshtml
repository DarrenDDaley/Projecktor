@model PostViewModel

<div class="posts" id="posts_@Model.PostId">

    @if (Model.ReblogedFrom != null)
    {
        <div class="post-header">
            <a href="@String.Format("{0}{1}{2}", "http://", Model.Author.Username, ".projecktor.com")">@Model.Author.Username</a><img class="reblog-img" src="~/Images/Reblog.png" 
                                                                                                                                  title="@Model.Author.Username reblogged @Model.ReblogedFrom.Username" />

            <a href="@String.Format("{0}{1}{2}","http://",  Model.ReblogedFrom.Username,".projecktor.com")">@Model.ReblogedFrom.Username</a>
        </div>

        for (int i = 0; i < Model.Images.Count; i++)
        {

            if (Model.Images.Count > 1)
            {
                string[] image = Model.Images[i].Remove(0, 1).Split('.');

                if (IsCDNAvailable == true)
                {
                    <a onclick="GalleryMany('@Model.PostId-@i', '@String.Format("{0}{1}", ProjecktorCDN, "/Images/full_page_vignette.png")')">
                        <img src="@String.Format("{0}{1}{2}", ProjecktorCDN, image[0] + "_540.", image[1])" , class="image540" width="540" id="@i" />
                    </a>
                }
                else
                {
                    <a onclick="GalleryMany('@Model.PostId-@i', '@Url.Action("image", "home", new { path = "~/Images/full_page_vignette.png" } )')">
                        <img src="@Url.Action("image", "home", new { path = image[0] + "_540." + image[1] } )" , class="image540"  width="540" id="@i" />
                    </a>
                }
            }
            else
            {
                string[] image = Model.Images[i].Remove(0, 1).Split('.');

                if (IsCDNAvailable == true)
                {
                         <a onclick="GalleryOne('@String.Format("{0}{1}{2}", ProjecktorCDN, image[0] + "_720.", image[1])', '@String.Format("{0}{1}", ProjecktorCDN, "/Images/full_page_vignette.png")')">
                            <img src="@String.Format("{0}{1}{2}", ProjecktorCDN, image[0] + "_540.", image[1])" , class="image540" width="540" id="@i" />
                         </a>
                }
                else
                {
                    <a onclick="GalleryOne('@Url.Action("image", "home", new { path = image[0] + "_720." + image[1] } )', '@Url.Action("image", "home", new { path = "~/Images/full_page_vignette.png" } )')">
                        <img src="@Url.Action("image", "home", new { path = image[0] + "_540." + image[1] } )" , class="image540" width="540" id="@i" />
                    </a>
                }

            }
        }

        <div class="post-body">
          <p>@Model.Text</p>
        </div>

        <div class="post-source">
            <label>source: <a href="@String.Format("{0}{1}{2}{3}","http://",  Model.Source.Author.Username, ".projecktor.com/post/", Model.Source.Id)">@Model.Source.Author.Username</a></label>
        </div>
    }
    else
    {
        <div class="post-header">
            <a href="@String.Format("{0}{1}{2}", "http://", Model.Author.Username, ".projecktor.com")">@Model.Author.Username</a>
        </div>

        for (int i = 0; i < Model.Images.Count; i++)
        {
            if (Model.Images.Count == 1)
            {
                string[] image = Model.Images[i].Remove(0, 1).Split('.');

                if (IsCDNAvailable == true)
                {
                    <a onclick="GalleryOne('@String.Format("{0}{1}{2}", ProjecktorCDN, image[0] + "_720.", image[1])', '@String.Format("{0}{1}", ProjecktorCDN, "/Images/full_page_vignette.png")')">
                        <img src="@String.Format("{0}{1}{2}", ProjecktorCDN, image[0] + "_540.", image[1])" , class="image540" width="540" id="@i" />
                    </a>
                }
                else
                {
                    <a onclick="GalleryOne('@Url.Action("image", "home", new { path = image[0] + "_720." + image[1] } )', '@Url.Action("image", "home", new { path = "~/Images/full_page_vignette.png" } )')">
                        <img src="@Url.Action("image", "home", new { path = image[0] + "_540." + image[1] } )" , class="image540" width="540" id="@i" />
                    </a>
                }
            }
            else
            {
                string[] image = Model.Images[i].Remove(0, 1).Split('.');

                if (IsCDNAvailable == true)
                {
                    <a onclick="GalleryMany('@Model.PostId-@i', '@String.Format("{0}{1}", ProjecktorCDN, "/Images/full_page_vignette.png")')">
                        <img src="@String.Format("{0}{1}{2}", ProjecktorCDN, image[0] + "_540.", image[1])" , class="image540" width="540" id="@i" />
                    </a>
                }
                else
                {
                    <a onclick="GalleryMany('@Model.PostId-@i', '@Url.Action("image", "home", new { path = "~/Images/full_page_vignette.png" } )')">
                        <img src="@Url.Action("image", "home", new { path = image[0] + "_540." + image[1] } )" , class="image540" width="540" id="@i" />
                    </a>
                }
            }
        }
            <div class="post-body">
              <p>@Model.Text</p>
            </div>
    }

   @if (Model.Hashtags != null)
   {
       <div class="post-tags">
           @foreach (Hashtag tag in Model.Hashtags) {
           <label>@Html.RouteLink("#" + tag.Tag, new { controller = "home", id = tag.Tag, action = "tagged" })</label>
           }
       </div>
   }

    <div class="footer">
        <div class="footer-buttons">
            @if (Security.IsAuthenticated == true)
            {

                if (Model.ReblogedFrom == null) {
                    <input type="button" class="reblogButton" onclick="Reblog(@Model.TextId, @Model.Author.Id, @Model.PostId)" title="Reblog" />
                }
                else {
                    <input type="button" class="reblogButton" onclick="Reblog(@Model.TextId, @Model.Author.Id, @Model.Source.Id)" title="Reblog" />
                }

                if (Model.Author.Id != Security.UserId)
                {
                    var Liked = CurrentUser.Likes.Any(l => l.PostId == Model.PostId);
                    var routeName = Liked ? "unLike" : "like";
                    string likeVar = routeName + "_" + Model.PostId;

                    if (Model.Source != null) {
                        <input type="button" class="likeButton" id="@likeVar" onclick="LikePost(@Model.PostId, @Model.Source.Id)" title="Like" />
                    }
                    else {
                        <input type="button" class="likeButton" id="@likeVar" onclick="LikePost(@Model.PostId, @Model.Author.Id)" title="Like" />
                    }

                }

                if (Model.ReblogedFrom != null && Model.Author.Id == Security.UserId) {
                    <input type="button" value="Delete" onclick="DeleteReblog(@Model.PostId)" />
                }
                else if (Model.Author.Id == Security.UserId && Model.ReblogedFrom == null) {
                    <input type="button" value="Delete" onclick="DeletePost(@Model.PostId)" />
                }
            }
        </div>

        <div class="post-notes">
            @if (Model.ReblogedFrom == null) {
                <label>@Html.RouteLink("Notes: " + Model.PostCount.ToString(), new { controller = "home", id = Model.Author.Id, action = "notes" })</label>
            }
            else {
                <label>@Html.RouteLink("Notes: " + Model.PostCount.ToString(), new { controller = "home", id = Model.Source.Id, action = "notes" })</label>
            }
        </div>
    </div>
</div>